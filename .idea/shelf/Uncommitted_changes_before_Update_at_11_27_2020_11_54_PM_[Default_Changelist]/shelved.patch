Index: app/src/main/java/com/example/plent/myActivities/EventActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.plent.myActivities;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\nimport com.example.plent.R;\r\nimport com.example.plent.models.ActivityType;\r\nimport com.example.plent.models.ApiModel;\r\nimport com.example.plent.models.Event;\r\nimport com.example.plent.models.User;\r\nimport com.example.plent.utils.Api;\r\nimport com.example.plent.utils.Constants;\r\nimport com.example.plent.utils.NetworkImage;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.gson.Gson;\r\n\r\nimport java.util.HashMap;\r\n\r\n\r\npublic class EventActivity extends AppCompatActivity {\r\n\r\n    private SharedPreferences mPreferences;\r\n    private User user;\r\n    private Event event;\r\n    private String eventId;\r\n    private static final String TAG = \"EVENT\";\r\n    ApiModel api;\r\n\r\n    Button signUpButton;\r\n    Button joinTelegramGroupButton;\r\n    TextView location;\r\n    TextView timeDate;\r\n    TextView eventHeader;\r\n    ImageView eventPoster;\r\n    TextView mainHeader;\r\n    TextView description;\r\n    TextView clashText;\r\n    LinearLayout event_activity_linear_layout;\r\n\r\n    int permission = 1; // We need to replace this with the user's permission field\r\n\r\n    // NOTE: IF YOU SET SKIPBACKEND TO TRUE, USE ACTUAL DB ID IN FINDEVENTSACTIVITY\r\n    // IF YOU SET SKIPBACKEND TO FALSE, USE DUMMY ID IN FINDEVENTSACTIVITY\r\n    // CHANGE THIS VALUE IN REDIRECTTOEVENTSPAGE\r\n\r\n    void backToFindEvents() {\r\n        Toast.makeText(this, \"Oops, this event could not be fetched!\", Toast.LENGTH_LONG).show();\r\n        finish();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.event_activity);\r\n        // get instance of api model\r\n        api =  Api.getInstance().apiModel;\r\n\r\n        Bundle extras = getIntent().getExtras();\r\n        if(extras == null) {\r\n            // if no event id is stored, bring them back to find events activity screen\r\n            backToFindEvents();\r\n        } else {\r\n            eventId = extras.getString(Constants.SELECTED_EVENT_KEY);\r\n            if (eventId == null) {\r\n                // if no event id is stored, bring them back to find events activity screen\r\n                backToFindEvents();\r\n            }\r\n        }\r\n\r\n        location = findViewById(R.id.location);\r\n        timeDate = findViewById(R.id.time_date);\r\n        eventHeader = findViewById(R.id.Athletics_header);\r\n        eventPoster = findViewById(R.id.athletics_poster);\r\n        description = findViewById(R.id.post_body);\r\n        clashText = findViewById(R.id.warning1);\r\n        event_activity_linear_layout = findViewById(R.id.event_activity_linear_layout);\r\n\r\n        joinTelegramGroupButton = findViewById(R.id.join_telegram_group_button);\r\n\r\n        if (!event.getTelegram().isEmpty()) {\r\n            // if there is no telegram link provided, no Join Telegram Group Button will be shown\r\n            joinTelegramGroupButton.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        Gson gson = new Gson();\r\n        mPreferences = getSharedPreferences(Constants.SHARED_PREF_FILE, MODE_PRIVATE);\r\n        String json = mPreferences.getString(Constants.USER_KEY, null);\r\n        if (json == null) {\r\n            Log.i(TAG, \"is null\");\r\n            // redirect to login page if no user info stored\r\n            Intent intent = new Intent(EventActivity.this, LoginActivity.class);\r\n            startActivity(intent);\r\n            finish();\r\n        } else {\r\n            Log.i(TAG, json);\r\n            user = gson.fromJson(json, User.class);\r\n\r\n            // fetch event info from db and check for clashes with user's events\r\n            if (Constants.SKIP_BACKEND) {\r\n                event = new Event(\"Athletics Freshmore Intro Session\", \"Monday, Oct 12th, 6.30pm - 8.30pm\", \"\", \"\", \"SUTD Stadium\", \"Always had a passion for running or just want to maintain your fitness goals? Athletics club is here for you! Come down to experience what our training would be like and join us for a run to Simpang afterwards for supper after burning those calories!\", \"https://t.me/sutdathletics2020\", ActivityType.FIFTH_ROW, \"https://res.cloudinary.com/dyaxu5mb4/image/upload/v1605984445/athleticsposter_lhtcqv.png\");\r\n\r\n                eventHeader.setText(event.getTitle());\r\n                location.setText(event.getLocation());\r\n                timeDate.setText(event.getDate());\r\n                description.setText(event.getDescription());\r\n                clashText.setText(event.getClashString());\r\n                try {\r\n                    new NetworkImage(eventPoster).execute(event.getImageUrl());\r\n                } catch (Exception e) {\r\n                    Log.e(TAG, \"Could not get poster image\");\r\n                }\r\n            } else {\r\n                Call<Event> call = api.getEvent(eventId, user.getId());\r\n                call.enqueue(new Callback<Event>() {\r\n                    @Override\r\n                    public void onResponse(Call<Event> call, Response<Event> response) {\r\n                        if (!response.isSuccessful()) {\r\n                            Toast.makeText(EventActivity.this, \"An error1 occurred, please try again!\", Toast.LENGTH_LONG).show();\r\n                        } else {\r\n                            event = response.body();\r\n                            if (event == null) {\r\n                                backToFindEvents();\r\n                            } else {\r\n                                eventHeader.setText(event.getTitle());\r\n                                location.setText(event.getLocation());\r\n                                // TODO: date time formatting is not correct yet\r\n                                timeDate.setText(event.getDate());\r\n                                description.setText(event.getDescription());\r\n                                // TODO: format date and time properly for clash string in backend\r\n                                clashText.setText(event.getClashString());\r\n                                Log.i(TAG, \"clash string: \" + event.getClashString());\r\n                                try {\r\n                                    new NetworkImage(eventPoster).execute(event.getImageUrl());\r\n                                } catch (Exception e) {\r\n                                    Log.e(TAG, \"Could not get poster image\");\r\n                                }\r\n                            }\r\n                            Log.i(TAG, \"Retrieved event id: \" + event.getId());\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Call<Event> call, Throwable t) {\r\n                        t.printStackTrace();\r\n                        Toast.makeText(EventActivity.this, \"An error2 occurred, please try again!\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        signUpButton = findViewById(R.id.sign_up_button);\r\n        if (user.getEvents().contains(eventId)) {\r\n            signUpButton.setTextAppearance(R.style.Cancel_Button);\r\n            signUpButton.setBackgroundResource(R.drawable.cancel_button_stroke);\r\n            signUpButton.setText(\"Cancel Sign Up\");\r\n        }\r\n        signUpButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (Constants.SKIP_BACKEND) {\r\n                    final boolean alreadyGoing = user.getEvents().contains(eventId);\r\n                    Toast toast_success = Toast.makeText(EventActivity.this, alreadyGoing ? R.string.remove_attendance_success_toast : R.string.sign_up_success_toast, Toast.LENGTH_LONG);\r\n                    toast_success.setGravity(Gravity.CENTER_VERTICAL, 0,0 );\r\n                    toast_success.show();\r\n\r\n                    if (alreadyGoing) {\r\n                        user.cancelAttendance(eventId);\r\n                        event.removeAttendee(user.getId());\r\n                        signUpButton.setText(\"Sign Up Now\");\r\n                        signUpButton.setTextAppearance(R.style.Primary_Button);\r\n                        signUpButton.setBackgroundResource(R.drawable.primary_button);\r\n                    } else {\r\n                        user.signUp(eventId);\r\n                        event.addAttendee(user.getId());\r\n                        signUpButton.setTextAppearance(R.style.Cancel_Button);\r\n                        signUpButton.setBackgroundResource(R.drawable.cancel_button_stroke);\r\n                        signUpButton.setText(\"Cancel Sign Up\");\r\n                    }\r\n\r\n                    SharedPreferences.Editor preferencesEditor = mPreferences.edit();\r\n                    Gson gson = new Gson();\r\n                    preferencesEditor.putString(Constants.USER_KEY, gson.toJson(user));\r\n                    Log.i(TAG, \"User: \" + user);\r\n                    preferencesEditor.apply();\r\n                } else {\r\n                    HashMap userAndEvent = new HashMap();\r\n                    userAndEvent.put(\"user_id\", user.getId());\r\n                    userAndEvent.put(\"event_id\", eventId);\r\n\r\n                    final boolean alreadyGoing = user.getEvents().contains(eventId);\r\n                    if (alreadyGoing) {\r\n                        userAndEvent.put(\"sign_up\", false);\r\n                    } else {\r\n                        userAndEvent.put(\"sign_up\", true);\r\n                    }\r\n                    Call<HashMap> call = api.signUp(userAndEvent);\r\n                    Log.i(\"Message\", \"Button Clicked\");\r\n\r\n                    call.enqueue(new Callback<HashMap>() {\r\n                        @Override\r\n                        public void onResponse(Call<HashMap> call, Response<HashMap> response) {\r\n                            if (!response.isSuccessful()) {\r\n                                Toast.makeText(EventActivity.this, \"An error1 occurred, please try again!\", Toast.LENGTH_LONG).show();\r\n                            } else {\r\n                                if (response.body() != null) {\r\n                                    Toast toast_success = Toast.makeText(EventActivity.this, alreadyGoing ? R.string.remove_attendance_success_toast : R.string.sign_up_success_toast, Toast.LENGTH_LONG);\r\n                                    toast_success.setGravity(Gravity.CENTER_VERTICAL, 0,0 );\r\n                                    toast_success.show();\r\n\r\n                                    if (alreadyGoing) {\r\n                                        user.cancelAttendance(eventId);\r\n                                        event.removeAttendee(user.getId());\r\n                                        signUpButton.setText(\"Sign Up Now\");\r\n                                        signUpButton.setTextAppearance(R.style.Primary_Button);\r\n                                        signUpButton.setBackgroundResource(R.drawable.primary_button);\r\n                                    } else {\r\n                                        user.signUp(eventId);\r\n                                        event.addAttendee(user.getId());\r\n                                        signUpButton.setTextAppearance(R.style.Cancel_Button);\r\n                                        signUpButton.setBackgroundResource(R.drawable.cancel_button_stroke);\r\n                                        signUpButton.setText(\"Cancel Sign Up\");\r\n                                    }\r\n\r\n                                    SharedPreferences.Editor preferencesEditor = mPreferences.edit();\r\n                                    Gson gson = new Gson();\r\n                                    preferencesEditor.putString(Constants.USER_KEY, gson.toJson(user));\r\n                                    Log.i(TAG, \"User: \" + user);\r\n                                    preferencesEditor.apply();\r\n\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<HashMap> call, Throwable t) {\r\n                            t.printStackTrace();\r\n                            Toast.makeText(EventActivity.this, \"An error2 occurred, please try again!\", Toast.LENGTH_LONG).show();\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        joinTelegramGroupButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.i(\"Message\", \"Join Telegram Group Button Clicked\");\r\n                String url = event.getTelegram(); //\"https://t.me/sutdathletics2020\";\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                intent.setData(Uri.parse(url));\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n\r\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n\r\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\r\n        fab.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(EventActivity.this, CalendarActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.menu_main, menu);\r\n        return true;\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onPrepareOptionsMenu(Menu menu){\r\n        MenuItem create_event = menu.findItem(R.id.manage_events);\r\n\r\n        Log.i(\"Message\", \"Create Event Clicked\");\r\n        if (permission == 0) {\r\n            create_event.setEnabled(false);\r\n            Log.i(\"Message\", \"No permission\");\r\n        } else {\r\n            Log.i(\"Message\", \"success\");\r\n            create_event.setEnabled(true);\r\n\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        // Handle action bar item clicks here. The action bar will\r\n        // automatically handle clicks on the Home/Up button, so long\r\n        // as you specify a parent activity in AndroidManifest.xml.\r\n        int id = item.getItemId();\r\n\r\n        //noinspection SimplifiableIfStatement\r\n        if (id == R.id.my_information) {\r\n            Intent intent = new Intent(EventActivity.this, MyInformationActivity.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        if (id == R.id.my_calender) {\r\n            Intent intent = new Intent(EventActivity.this, CalendarActivity.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        if (id == R.id.find_events_and_activities) {\r\n            Intent intent = new Intent(EventActivity.this, FindEventsActivity.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        if (id == R.id.manage_events) {\r\n            Intent intent = new Intent (EventActivity.this, ManageEventsActivity.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/plent/myActivities/EventActivity.java	(revision aa2b3086de99a697bc60c4e4c539ccb3626e74ac)
+++ app/src/main/java/com/example/plent/myActivities/EventActivity.java	(date 1606491987873)
@@ -15,6 +15,7 @@
 import android.widget.TextView;
 import android.widget.Toast;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
 import retrofit2.Call;
Index: app/src/main/java/com/example/plent/myActivities/SeeAllActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/plent/myActivities/SeeAllActivity.java	(date 1606490798858)
+++ app/src/main/java/com/example/plent/myActivities/SeeAllActivity.java	(date 1606490798858)
@@ -0,0 +1,36 @@
+package com.example.plent.myActivities;
+
+import android.os.Bundle;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.plent.R;
+import com.example.plent.models.Event;
+import com.example.plent.utils.SearchRecyclerAdapter;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class SeeAllActivity extends AppCompatActivity {
+
+    private List<Event> eventList = new ArrayList<>();
+    private RecyclerView recyclerView;
+    private SearchRecyclerAdapter seeAllAdapter;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.see_all_activity);
+
+        recyclerView = findViewById(R.id.see_all_recycler_view);
+        seeAllAdapter = new SearchRecyclerAdapter(eventList);
+        recyclerView.setLayoutManager(new GridLayoutManager(this, 3));
+        //recyclerView.setAdapter(seeAllAdapter);
+
+    }
+
+
+}
Index: app/src/main/res/layout/see_all_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/see_all_activity.xml	(date 1606488634337)
+++ app/src/main/res/layout/see_all_activity.xml	(date 1606488634337)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/see_all_recycler_view"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: .idea/modules/app/Plent.app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module external.linked.project.id=\":app\" external.linked.project.path=\"$MODULE_DIR$/../../../app\" external.root.project.path=\"$MODULE_DIR$/../../..\" external.system.id=\"GRADLE\" external.system.module.group=\"Plent\" external.system.module.version=\"unspecified\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"android-gradle\" name=\"Android-Gradle\">\r\n      <configuration>\r\n        <option name=\"GRADLE_PROJECT_PATH\" value=\":app\" />\r\n        <option name=\"LAST_SUCCESSFUL_SYNC_AGP_VERSION\" value=\"4.1.1\" />\r\n        <option name=\"LAST_KNOWN_AGP_VERSION\" value=\"4.1.1\" />\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"android\" name=\"Android\">\r\n      <configuration>\r\n        <option name=\"SELECTED_BUILD_VARIANT\" value=\"debug\" />\r\n        <option name=\"ASSEMBLE_TASK_NAME\" value=\"assembleDebug\" />\r\n        <option name=\"COMPILE_JAVA_TASK_NAME\" value=\"compileDebugSources\" />\r\n        <afterSyncTasks>\r\n          <task>generateDebugSources</task>\r\n        </afterSyncTasks>\r\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\r\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/src/main/AndroidManifest.xml\" />\r\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/src/main/res\" />\r\n        <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/main/res;file://$MODULE_DIR$/../../../app/src/debug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" />\r\n        <option name=\"TEST_RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/androidTest/res;file://$MODULE_DIR$/../../../app/src/androidTestDebug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/androidTest/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug\" />\r\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/src/main/assets\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_7\">\r\n    <output url=\"file://$MODULE_DIR$/../../../app/build/intermediates/javac/debug/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/../../../app/build/intermediates/javac/debugUnitTest/classes\" />\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$/../../../app\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/androidTest/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/test/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/assets\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/res\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" type=\"java-resource\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../../app/.gradle\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../../app/build\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Android API 30 Platform\" jdkType=\"Android SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.collection:collection:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-common:2.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.arch.core:core-common:2.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.annotation:annotation:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.constraintlayout:constraintlayout-solver:1.1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.retrofit2:converter-gson:2.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.retrofit2:retrofit:2.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.okhttp3:okhttp:3.10.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.squareup.okio:okio:1.14.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.code.gson:gson:2.8.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.cloudinary:cloudinary-core:1.26.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.material:material:1.2.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.appcompat:appcompat:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.cardview:cardview:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.coordinatorlayout:coordinatorlayout:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.viewpager2:viewpager2:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.fragment:fragment:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.recyclerview:recyclerview:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.transition:transition:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.appcompat:appcompat-resources:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.vectordrawable:vectordrawable-animated:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.vectordrawable:vectordrawable:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.drawerlayout:drawerlayout:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.viewpager:viewpager:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.customview:customview:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.loader:loader:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.activity:activity:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.core:core:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-runtime:2.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.cursoradapter:cursoradapter:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.versionedparcelable:versionedparcelable:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel:2.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.savedstate:savedstate:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata:2.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-core:2.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.arch.core:core-runtime:2.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.interpolator:interpolator:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: devs.mulham.horizontalcalendar:horizontalcalendar:1.3.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.constraintlayout:constraintlayout:1.1.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.annotation:annotation-experimental:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.cloudinary:cloudinary-android:1.30.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.cloudinary:cloudinary-android-core:1.30.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.cloudinary:cloudinary-android-preprocess:1.30.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.cloudinary:cloudinary-android-ui:1.30.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.cloudinary:cloudinary-android-download:1.30.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-integration:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-library:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.squareup:javawriter:2.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: javax.inject:javax.inject:1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.google.code.findbugs:jsr305:2.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.ext:junit:1.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.espresso:espresso-core:3.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:runner:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:core:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:monitor:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.espresso:espresso-idling-resource:3.3.0@aar\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/app/Plent.app.iml	(revision aa2b3086de99a697bc60c4e4c539ccb3626e74ac)
+++ .idea/modules/app/Plent.app.iml	(date 1606488634714)
@@ -57,10 +57,10 @@
     <orderEntry type="library" name="Gradle: com.google.android.material:material:1.2.1@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.appcompat:appcompat:1.2.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.cardview:cardview:1.0.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: androidx.coordinatorlayout:coordinatorlayout:1.1.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.viewpager2:viewpager2:1.0.0@aar" level="project" />
-    <orderEntry type="library" name="Gradle: androidx.fragment:fragment:1.1.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.recyclerview:recyclerview:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.coordinatorlayout:coordinatorlayout:1.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.fragment:fragment:1.1.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.transition:transition:1.2.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.appcompat:appcompat-resources:1.2.0@aar" level="project" />
     <orderEntry type="library" name="Gradle: androidx.vectordrawable:vectordrawable-animated:1.1.0@aar" level="project" />
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.plent\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\r\n\r\n    <application\r\n        android:name=\"com.example.plent.MainApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable/plent_logo\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/logo\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppThemeNoActionBar\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:ignore=\"AllowBackup\">\r\n\r\n        <activity android:name=\".myActivities.MyInformationActivity\"></activity>\r\n        <activity android:name=\".myActivities.SearchActivity\"/>\r\n\r\n        <activity android:name=\".myActivities.LoginActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".myActivities.EventActivity\"\r\n            android:label=\"Event Description\"\r\n            android:parentActivityName=\".myActivities.EventActivity\">\r\n\r\n            <!--\r\n            <intent-filter>\r\n            <action android:name=\"android.intent.action.MAIN\" />\r\n            <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n            -->\r\n\r\n        </activity>\r\n        <activity\r\n            android:name=\".myActivities.FindEventsActivity\"\r\n            android:label=\"@string/find_events_activity\"\r\n            android:parentActivityName=\".myActivities.EventActivity\" />\r\n        <activity\r\n            android:name=\".myActivities.CalendarActivity\"\r\n            android:label=\"Calendar\"\r\n            android:parentActivityName=\".myActivities.EventActivity\" />\r\n        <activity\r\n            android:name=\".myActivities.SignUpActivity\"\r\n            android:label=\"Sign Up\">\r\n\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".myActivities.ManageEventsActivity\" />\r\n        <activity android:name=\".myActivities.CreateEvents\"/>\r\n        <activity android:name=\".myActivities.ParticipantsActivity\"\r\n            android:label=\"Participants Activity\"\r\n            android:parentActivityName=\".myActivities.ManageEventsActivity\"/>\r\n\r\n        <meta-data android:name=\"CLOUDINARY_URL\" android:value=\"cloudinary://@dyaxu5mb4\"/>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision aa2b3086de99a697bc60c4e4c539ccb3626e74ac)
+++ app/src/main/AndroidManifest.xml	(date 1606488634355)
@@ -62,6 +62,7 @@
         <activity android:name=".myActivities.ParticipantsActivity"
             android:label="Participants Activity"
             android:parentActivityName=".myActivities.ManageEventsActivity"/>
+        <activity android:name=".myActivities.SeeAllActivity" />
 
         <meta-data android:name="CLOUDINARY_URL" android:value="cloudinary://@dyaxu5mb4"/>
     </application>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.plent\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.4.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'\r\n    implementation group: 'com.cloudinary', name: 'cloudinary-android', version: '1.30.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'devs.mulham.horizontalcalendar:horizontalcalendar:1.3.4'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n}\r\ntask prepareKotlinBuildScriptModel {\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision aa2b3086de99a697bc60c4e4c539ccb3626e74ac)
+++ app/build.gradle	(date 1606488315254)
@@ -31,6 +31,7 @@
     implementation 'com.squareup.retrofit2:retrofit:2.4.0'
     implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
     implementation group: 'com.cloudinary', name: 'cloudinary-android', version: '1.30.0'
+    implementation 'androidx.recyclerview:recyclerview:1.1.0'
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
Index: app/src/main/java/com/example/plent/utils/SearchRecyclerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.plent.utils;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Filter;\r\nimport android.widget.Filterable;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.plent.R;\r\nimport com.example.plent.models.Event;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SearchRecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> implements Filterable {\r\n\r\n    private List<Event> eventList;\r\n    private List<Event> eventListAll;\r\n    private static final int VIEW_TYPE_EMPTY = 0;\r\n    private static final int VIEW_TYPE_EVENT = 1;\r\n\r\n\r\n    public SearchRecyclerAdapter(List<Event> eventList) {\r\n        this.eventList = eventList;\r\n        this.eventListAll = new ArrayList<>(eventList);\r\n    }\r\n    //Number of rows in your recycler view\r\n    @Override\r\n    public int getItemCount() {\r\n        if (eventList.size() == 0) {\r\n            return 1;\r\n        } else {\r\n            return eventList.size();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        if (eventList.size() == 0){\r\n            return VIEW_TYPE_EMPTY;\r\n        }else{\r\n            return VIEW_TYPE_EVENT;\r\n        }\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        RecyclerView.ViewHolder viewHolder;\r\n        LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());\r\n\r\n        switch (viewType){\r\n            case VIEW_TYPE_EVENT:\r\n                View v1 = layoutInflater.inflate(R.layout.search_event_item, parent, false);\r\n                viewHolder = new EventViewHolder(v1);\r\n                break;\r\n            default:\r\n                View v2 = layoutInflater.inflate(R.layout.search_placeholder, parent, false);\r\n                viewHolder = new EmptyViewHolder(v2);\r\n                break;\r\n        }\r\n        return viewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\r\n        switch(holder.getItemViewType()){\r\n            case VIEW_TYPE_EVENT:\r\n                EventViewHolder eventViewHolder = (EventViewHolder) holder;\r\n                setEventDetails(eventViewHolder, position);\r\n            default:\r\n                return;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void setEventDetails (EventViewHolder holder, int position) {\r\n        Event current_event = eventList.get(position);\r\n        holder.name.setText(current_event.getTitle());\r\n        holder.location.setText(current_event.getLocation());\r\n        holder.time.setText(current_event.getStart_time()+\" to \"+current_event.getEnd_time());\r\n        // need to set poster image url\r\n\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public Filter getFilter() {\r\n        return filter;\r\n    }\r\n    Filter filter = new Filter(){\r\n        // runs on background thread\r\n        @Override\r\n        protected FilterResults performFiltering(CharSequence constraint) {\r\n            List<Event> filteredList = new ArrayList<>();\r\n            if(constraint.toString().isEmpty()){\r\n                filteredList.clear();\r\n            }else{\r\n                for(Event e : eventListAll){\r\n                    if(e.getTitle().toLowerCase().contains(constraint.toString().toLowerCase())){\r\n                        filteredList.add(e);\r\n                    }\r\n                }\r\n            }\r\n\r\n            FilterResults filterResults = new FilterResults();\r\n            filterResults.values = filteredList;\r\n            return filterResults;\r\n        }\r\n        // runs on UI thread, takes in filterResults\r\n        @Override\r\n        protected void publishResults(CharSequence constraint, FilterResults results) {\r\n            eventList.clear();\r\n            eventList.addAll((List) results.values);\r\n            notifyDataSetChanged();\r\n        }\r\n    };\r\n    class EventViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener{\r\n            ImageView poster;\r\n            TextView name;\r\n            TextView time;\r\n            TextView location;\r\n        public EventViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            poster = itemView.findViewById(R.id.search_event_poster);\r\n            name = itemView.findViewById(R.id.search_event_name);\r\n            time = itemView.findViewById(R.id.search_event_time);\r\n            location = itemView.findViewById(R.id.seach_event_location);\r\n        }\r\n\r\n        @Override\r\n        public void onClick(View v) {\r\n//            Intent intent = new Intent(v.getContext(), EventActivity.class);\r\n//            intent.putExtra(Constants.SELECTED_EVENT_KEY, Constants.SKIP_BACKEND ? \"5fb96424fe88a67bb74b4289\" : \"5fb937bce230d0e3a9e2f912\"); // 5fb937bce230d0e3a9e2f912 - actual id in db  // 5fb96424fe88a67bb74b4289 - dummy id\r\n//            v.getContext().startActivity(intent);\r\n            Toast.makeText(v.getContext(),\"Hello\", Toast.LENGTH_LONG ).show();\r\n        }\r\n    }\r\n\r\n    class EmptyViewHolder extends RecyclerView.ViewHolder {\r\n        public EmptyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/plent/utils/SearchRecyclerAdapter.java	(revision aa2b3086de99a697bc60c4e4c539ccb3626e74ac)
+++ app/src/main/java/com/example/plent/utils/SearchRecyclerAdapter.java	(date 1606489554777)
@@ -24,6 +24,7 @@
     private List<Event> eventListAll;
     private static final int VIEW_TYPE_EMPTY = 0;
     private static final int VIEW_TYPE_EVENT = 1;
+    private static final int VIEW_TYPE_SEE_ALL = 0;
 
 
     public SearchRecyclerAdapter(List<Event> eventList) {
@@ -68,6 +69,8 @@
         return viewHolder;
     }
 
+    //TRYING SOMETHING HERE
+
     @Override
     public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {
         switch(holder.getItemViewType()){
Index: app/src/main/res/layout/see_all_card.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/see_all_card.xml	(date 1606489238883)
+++ app/src/main/res/layout/see_all_card.xml	(date 1606489238883)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView
+    xmlns:card_view="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/see_all_card"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:background="@color/colorPrimary">
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <ImageView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:src="@drawable/poster_placeholder1"
+            android:layout_gravity="center"/>
+
+        <TextView
+            android:id="@+id/see_all_event_title"
+            style="@style/Sub_Header"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:padding="4dp"
+            android:layout_gravity="center"
+            android:text="Event Title"/>
+
+
+    </LinearLayout>
+
+
+</androidx.cardview.widget.CardView>
+
+
+
